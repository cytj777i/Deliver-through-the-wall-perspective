-- Roblox手机端极速传送脚本 (修复版)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Camera = workspace.CurrentCamera

-- 获取本地玩家
local LocalPlayer = Players.LocalPlayer

-- 初始化传送模块
local Teleport = {
    Active = false,
    Connection = nil,
    Target = nil,
    Wallhack = false,
    WallVision = false,
    OriginalTransparency = {},
    PlayerList = {},
    Origin = nil,
    PlayerListVisible = false
}

-- UI配置 - 优化手机端体验
local UI = {
    ButtonSize = UDim2.new(0.8, 0, 0.12, 0),
    Spacing = 0.02,
    Position = UDim2.new(0.7, 0, 0.2, 0),
    DragHandleHeight = 0.1,
    ContainerHeight = 0.65,
    ContainerWidth = 0.3,
    FontSize = 16
}

-- 全局变量存储UI元素
local ScreenGui, MainFrame, StartButton, StopButton, SwapTargetButton, WallhackButton, WallVisionButton, StatusLabel, DragHandle, PlayerListFrame

-- 创建按钮（优化点击体验）
local function CreateButton(name, parent, position, backgroundColor)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UI.ButtonSize
    button.Position = position
    button.BackgroundColor3 = backgroundColor
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.TextSize = UI.FontSize
    button.TextWrapped = true
    button.ZIndex = 10  -- 确保按钮在顶层
    button.Parent = parent
    
    -- 添加圆角
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = button
    
    return button
end

-- 创建玩家列表UI
local function CreatePlayerListUI(parentFrame)
    local PlayerListFrame = Instance.new("Frame")
    PlayerListFrame.Name = "PlayerListFrame"
    PlayerListFrame.Size = UDim2.new(1.2, 0, 0.8, 0)
    PlayerListFrame.Position = UDim2.new(-0.25, 0, 0.15, 0)
    PlayerListFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    PlayerListFrame.BackgroundTransparency = 0.1
    PlayerListFrame.BorderSizePixel = 0
    PlayerListFrame.Visible = false
    PlayerListFrame.ZIndex = 20  -- 确保在按钮之上
    PlayerListFrame.Parent = parentFrame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = PlayerListFrame
    
    local ScrollFrame = Instance.new("ScrollingFrame")
    ScrollFrame.Name = "ScrollFrame"
    ScrollFrame.Size = UDim2.new(0.9, 0, 0.85, 0)
    ScrollFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
    ScrollFrame.BackgroundTransparency = 1
    ScrollFrame.BorderSizePixel = 0
    ScrollFrame.ScrollBarThickness = 6
    ScrollFrame.ZIndex = 21
    ScrollFrame.Parent = PlayerListFrame
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Padding = UDim.new(0, 5)
    UIListLayout.Parent = ScrollFrame
    
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Size = UDim2.new(0.9, 0, 0.08, 0)
    TitleLabel.Position = UDim2.new(0.05, 0, 0.01, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = "选择目标玩家:"
    TitleLabel.TextColor3 = Color3.new(1, 1, 1)
    TitleLabel.TextSize = UI.FontSize
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.ZIndex = 21
    TitleLabel.Parent = PlayerListFrame
    
    return PlayerListFrame
end

-- 创建UI界面
local function CreateUI()
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "TeleportGui"
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling  -- 重要：设置ZIndex行为

    -- 主容器
    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(UI.ContainerWidth, 0, UI.ContainerHeight, 0)
    MainFrame.Position = UI.Position
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MainFrame.BackgroundTransparency = 0.2
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.ZIndex = 5
    MainFrame.Parent = ScreenGui

    -- 添加圆角
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = MainFrame

    -- 拖拽区域
    DragHandle = Instance.new("TextButton")
    DragHandle.Name = "DragHandle"
    DragHandle.Size = UDim2.new(1, 0, UI.DragHandleHeight, 0)
    DragHandle.Position = UDim2.new(0, 0, 0, 0)
    DragHandle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    DragHandle.BackgroundTransparency = 0.3
    DragHandle.BorderSizePixel = 0
    DragHandle.Text = "传送控制面板 (拖拽移动)"
    DragHandle.TextColor3 = Color3.fromRGB(255, 255, 255)
    DragHandle.TextSize = UI.FontSize
    DragHandle.TextWrapped = true
    DragHandle.ZIndex = 6
    DragHandle.Parent = MainFrame

    -- 按钮容器
    local ButtonContainer = Instance.new("Frame")
    ButtonContainer.Name = "ButtonContainer"
    ButtonContainer.Size = UDim2.new(1, 0, 1 - UI.DragHandleHeight, 0)
    ButtonContainer.Position = UDim2.new(0, 0, UI.DragHandleHeight, 0)
    ButtonContainer.BackgroundTransparency = 1
    ButtonContainer.ZIndex = 6
    ButtonContainer.Parent = MainFrame

    -- 按钮布局计算
    local function GetButtonPosition(index)
        local yPosition = 0.02 + (UI.ButtonSize.Y.Scale + UI.Spacing) * (index - 1)
        return UDim2.new(0.1, 0, yPosition, 0)
    end

    -- 创建所有按钮
    StartButton = CreateButton("开始传送", ButtonContainer, GetButtonPosition(1), Color3.fromRGB(50, 150, 50))
    StopButton = CreateButton("停止传送", ButtonContainer, GetButtonPosition(2), Color3.fromRGB(150, 50, 50))
    SwapTargetButton = CreateButton("切换目标", ButtonContainer, GetButtonPosition(3), Color3.fromRGB(150, 150, 50))
    WallhackButton = CreateButton("穿墙模式: 关闭", ButtonContainer, GetButtonPosition(4), Color3.fromRGB(50, 100, 150))
    WallVisionButton = CreateButton("穿墙视野: 关闭", ButtonContainer, GetButtonPosition(5), Color3.fromRGB(50, 50, 150))

    -- 状态显示
    StatusLabel = Instance.new("TextLabel")
    StatusLabel.Name = "StatusLabel"
    StatusLabel.Size = UDim2.new(0.8, 0, 0.15, 0)
    StatusLabel.Position = GetButtonPosition(6)
    StatusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    StatusLabel.BackgroundTransparency = 0.3
    StatusLabel.BorderSizePixel = 0
    StatusLabel.Text = "状态: 就绪"
    StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    StatusLabel.TextSize = UI.FontSize
    StatusLabel.TextWrapped = true
    StatusLabel.ZIndex = 6
    StatusLabel.Parent = ButtonContainer
    
    local StatusCorner = Instance.new("UICorner")
    StatusCorner.CornerRadius = UDim.new(0, 8)
    StatusCorner.Parent = StatusLabel

    -- 创建玩家列表UI
    PlayerListFrame = CreatePlayerListUI(MainFrame)

    return true
end

-- 获取所有玩家
local function GetAllPlayers()
    local players = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(players, player)
        end
    end
    return players
end

-- 更新玩家列表显示
local function UpdatePlayerList()
    local scrollFrame = PlayerListFrame:FindFirstChild("ScrollFrame")
    if not scrollFrame then return end
    
    -- 清空现有玩家按钮
    for _, child in ipairs(scrollFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    -- 添加玩家按钮
    local players = GetAllPlayers()
    for i, player in ipairs(players) do
        local playerButton = Instance.new("TextButton")
        playerButton.Name = player.Name
        playerButton.Size = UDim2.new(0.95, 0, 0.15, 0)
        playerButton.Position = UDim2.new(0.025, 0, 0, (i-1) * 0.16)
        playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
        playerButton.Text = player.Name
        playerButton.TextColor3 = Color3.new(1, 1, 1)
        playerButton.TextSize = 14
        playerButton.ZIndex = 22
        playerButton.Parent = scrollFrame
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 6)
        buttonCorner.Parent = playerButton
        
        -- 点击选择玩家
        playerButton.MouseButton1Click:Connect(function()
            if Teleport.Active then
                Teleport.Target = player
                print("已选择目标: " .. player.Name)
            else
                print("请先开始传送再选择目标")
            end
            -- 选择后自动关闭列表
            PlayerListFrame.Visible = false
            Teleport.PlayerListVisible = false
        end)
    end
    
    -- 更新滚动区域
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #players * 0.16)
end

-- 切换玩家列表显示
local function TogglePlayerList()
    Teleport.PlayerListVisible = not Teleport.PlayerListVisible
    PlayerListFrame.Visible = Teleport.PlayerListVisible
    
    if Teleport.PlayerListVisible then
        UpdatePlayerList()
    end
end

-- 查找最近的玩家
local function FindNearestPlayer()
    local myChar = LocalPlayer.Character
    if not myChar then return nil end

    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return nil end

    local nearestPlayer = nil
    local nearestDistance = math.huge

    for _, player in pairs(GetAllPlayers()) do
        local char = player.Character
        if char then
            local root = char:FindFirstChild("HumanoidRootPart")
            if root then
                local distance = (myRoot.Position - root.Position).Magnitude
                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end

    return nearestPlayer
end

-- 切换目标玩家（自动切换）
function SwapTarget()
    if not Teleport.Active then 
        print("请先开始传送")
        return 
    end

    Teleport.PlayerList = GetAllPlayers()

    if #Teleport.PlayerList == 0 then
        warn("没有其他玩家可切换")
        return
    end

    local currentIndex = 1
    for i, player in ipairs(Teleport.PlayerList) do
        if player == Teleport.Target then
            currentIndex = i
            break
        end
    end

    local nextIndex = currentIndex % #Teleport.PlayerList + 1
    Teleport.Target = Teleport.PlayerList[nextIndex]
    print("已切换到目标: " .. Teleport.Target.Name)
end

-- 停止传送
function StopTeleport()
    if not Teleport.Active then return end

    Teleport.Active = false
    if Teleport.Connection then
        Teleport.Connection:Disconnect()
        Teleport.Connection = nil
    end

    print("传送已停止")
end

-- 传送循环
local function TeleportRoutine()
    if not Teleport.Active then return end

    local myChar = LocalPlayer.Character
    local targetChar = Teleport.Target and Teleport.Target.Character

    if not myChar or not targetChar then
        StopTeleport()
        return
    end

    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")

    if myRoot and targetRoot then
        -- 正下方传送：5.5格高度
        local teleportPosition = targetRoot.Position + Vector3.new(0, -5.5, 0)
        myRoot.CFrame = CFrame.new(teleportPosition)
    end
end

-- 开始传送
function StartTeleport()
    if Teleport.Active then 
        print("传送已在运行中")
        return 
    end

    local myChar = LocalPlayer.Character
    if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then
        warn("角色未加载或没有HumanoidRootPart")
        return
    end

    Teleport.Origin = myChar.HumanoidRootPart.CFrame
    Teleport.PlayerList = GetAllPlayers()
    Teleport.Target = FindNearestPlayer()

    if not Teleport.Target then
        warn("未找到目标玩家")
        return
    end

    Teleport.Active = true
    Teleport.Connection = RunService.Heartbeat:Connect(function()
        TeleportRoutine()
    end)
    print("传送已开始，目标: " .. Teleport.Target.Name)
end

-- 切换穿墙模式
function ToggleWallhack()
    Teleport.Wallhack = not Teleport.Wallhack
    
    local localChar = LocalPlayer.Character
    if not localChar then 
        print("角色未加载")
        return 
    end
    
    if Teleport.Wallhack then
        -- 启用穿墙
        for _, part in ipairs(localChar:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        print("穿墙模式已启用")
    else
        -- 禁用穿墙
        for _, part in ipairs(localChar:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
        print("穿墙模式已禁用")
    end
end

-- 切换穿墙视野
function ToggleWallVision()
    Teleport.WallVision = not Teleport.WallVision

    if Teleport.WallVision then
        -- 启用视野穿墙
        Teleport.OriginalTransparency = {}

        -- 使所有墙壁透明
        for _, part in ipairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 0.5 then
                Teleport.OriginalTransparency[part] = part.Transparency
                part.Transparency = 0.7
            end
        end

        -- 使地面透明
        local terrain = workspace:FindFirstChildOfClass("Terrain")
        if terrain then
            Teleport.OriginalTransparency[terrain] = 0
            terrain.Transparency = 0.5
        end
        print("穿墙视野已启用")
    else
        -- 恢复原始透明度
        for part, transparency in pairs(Teleport.OriginalTransparency) do
            if part and part.Parent then
                part.Transparency = transparency
            end
        end
        Teleport.OriginalTransparency = {}
        print("穿墙视野已禁用")
    end
end

-- 设置拖拽功能（使用你提供的代码）
local function SetupDrag()
    local dragging = false
    local dragInput, dragStart, startPos

    DragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    DragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- 绑定按钮事件
local function BindButtonEvents()
    StartButton.MouseButton1Click:Connect(StartTeleport)
    StopButton.MouseButton1Click:Connect(StopTeleport)
    SwapTargetButton.MouseButton1Click:Connect(function()
        TogglePlayerList()
    end)
    WallhackButton.MouseButton1Click:Connect(ToggleWallhack)
    WallVisionButton.MouseButton1Click:Connect(ToggleWallVision)
    
    print("按钮事件绑定完成")
end

-- 更新UI状态
local function SetupUIUpdates()
    RunService.Heartbeat:Connect(function()
        -- 更新传送状态
        if Teleport.Active then
            StatusLabel.Text = "状态: 传送中 - " .. (Teleport.Target and Teleport.Target.Name or "无目标")
            StatusLabel.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        else
            StatusLabel.Text = "状态: 就绪"
            StatusLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        end

        -- 更新穿墙模式按钮状态
        if Teleport.Wallhack then
            WallhackButton.Text = "穿墙模式: 开启"
            WallhackButton.BackgroundColor3 = Color3.fromRGB(80, 130, 200)
        else
            WallhackButton.Text = "穿墙模式: 关闭"
            WallhackButton.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
        end

        -- 更新穿墙视野按钮状态
        if Teleport.WallVision then
            WallVisionButton.Text = "穿墙视野: 开启"
            WallVisionButton.BackgroundColor3 = Color3.fromRGB(80, 80, 200)
        else
            WallVisionButton.Text = "穿墙视野: 关闭"
            WallVisionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 150)
        end
    end)
end

-- 初始化UI和功能
local function Initialize()
    -- 确保玩家和PlayerGui存在
    if not LocalPlayer or not LocalPlayer:FindFirstChild("PlayerGui") then
        warn("等待玩家加载...")
        LocalPlayer:WaitForChild("PlayerGui")
    end

    -- 创建UI
    local success = pcall(CreateUI)
    
    if not success then
        warn("创建UI失败")
        return
    end

    -- 设置拖拽
    SetupDrag()
    
    -- 绑定按钮事件
    BindButtonEvents()
    
    -- 设置UI更新
    SetupUIUpdates()
    
    print("传送UI已成功加载！")
end

-- 等待游戏完全加载后再初始化
local function SafeInitialize()
    pcall(function()
        -- 等待玩家加载完成
        if not LocalPlayer.Character then
            LocalPlayer.CharacterAdded:Wait()
        end
        
        -- 短暂延迟确保一切就绪
        wait(2)
        
        Initialize()
    end)
end

-- 玩家加入/离开事件
Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        table.insert(Teleport.PlayerList, player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    for i, p in ipairs(Teleport.PlayerList) do
        if p == player then
            table.remove(Teleport.PlayerList, i)
            break
        end
    end
end)

-- 异常处理
LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(function()
        if Teleport.Active then
            StopTeleport()
        end
    end)
end)

-- 开始初始化
SafeInitialize()
print("传送脚本加载完成 | 方向:正下方(Y-5.5) | 修复版")