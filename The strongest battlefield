-- Roblox手机端极速传送脚本 (UI优化增强版)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Lighting = game:GetService("Lighting")
local Camera = workspace.CurrentCamera

-- UI配置 - 缩小整体界面
local UI = {
    ButtonSize = UDim2.new(0.95, 0, 0.2, 0), -- 按钮填满容器宽度，高度增加
    Spacing = UDim2.new(0, 0, 0.01, 0),      -- 紧凑间距
    Position = UDim2.new(0.75, 0, 0.35, 0),
    ContainerHeight = 0.75, -- 缩小容器高度
    ContainerWidth = 0.22   -- 缩小容器宽度
}

local Teleport = {
    Active = false,
    Target = nil,
    Origin = nil,
    Connection = nil,
    PlayerList = {},
    AntiThrow = false, -- 防甩模式
    BodyForce = nil,   -- 重力控制
    LastPosition = nil, -- 用于检测异常移动
    WallVision = false, -- 透视模式
    OriginalTransparency = {} -- 存储原始透明度
}

-- 创建按钮（优化按钮）
local function CreateButton(name, parent, position, isStateButton)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UI.ButtonSize
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.TextSize = 14 -- 适中字体大小
    button.Parent = parent
    
    -- 状态指示器
    if isStateButton then
        local stateIndicator = Instance.new("Frame")
        stateIndicator.Name = "StateIndicator"
        stateIndicator.Size = UDim2.new(0.08, 0, 0.08, 0)
        stateIndicator.Position = UDim2.new(0.9, 0, 0.1, 0)
        stateIndicator.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        stateIndicator.BorderSizePixel = 1
        stateIndicator.BorderColor3 = Color3.new(1, 1, 1)
        stateIndicator.Parent = button
    end

    -- 点击处理
    local lastTap = 0
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            if os.clock() - lastTap < 0.5 then return end
            lastTap = os.clock()

            if name == "开始" then
                StartTeleport()
            elseif name == "换人" then
                SwapTarget()
            elseif name == "结束" then
                StopTeleport()
            elseif name == "防甩" then
                ToggleAntiThrow()
            elseif name == "视野" then
                ToggleWallVision()
            end
        end
    end)

    return button
end

-- 更新按钮状态显示
local function UpdateButtonState(buttonName, isActive)
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local screenGui = playerGui:FindFirstChild("NinjaInjectorUI")
    if not screenGui then return end
    
    local container = screenGui:FindFirstChild("ButtonContainer")
    if not container then return end
    
    local button = container:FindFirstChild(buttonName)
    if button then
        local stateIndicator = button:FindFirstChild("StateIndicator")
        if stateIndicator then
            if isActive then
                stateIndicator.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- 绿色（开启）
                button.BackgroundColor3 = Color3.fromRGB(0, 80, 0) -- 深绿色背景
            else
                stateIndicator.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- 红色（关闭）
                button.BackgroundColor3 = Color3.fromRGB(80, 0, 0) -- 深红色背景
            end
        end
    end
end

-- 初始化UI - 缩小整体界面
local function InitMobileUI()
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    -- 创建ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NinjaInjectorUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- 创建缩小容器
    local container = Instance.new("Frame")
    container.Name = "ButtonContainer"
    container.Size = UDim2.new(UI.ContainerWidth, 0, UI.ContainerHeight, 0)
    container.Position = UI.Position
    container.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    container.BackgroundTransparency = 0.1
    container.BorderSizePixel = 2
    container.BorderColor3 = Color3.fromRGB(60, 60, 60)
    container.Parent = screenGui

    -- 计算按钮位置 - 垂直排列填满容器
    local buttonHeight = UI.ButtonSize.Y.Scale
    local spacing = UI.Spacing.Y.Scale
    local totalHeight = (buttonHeight * 5) + (spacing * 4) -- 5个按钮，4个间距
    local startY = (1 - totalHeight) / 2 -- 垂直居中
    
    -- 创建按钮 - 填满容器宽度
    CreateButton("开始", container, UDim2.new(0.025, 0, startY, 0), false)
    CreateButton("换人", container, UDim2.new(0.025, 0, startY + buttonHeight + spacing, 0), false)
    CreateButton("结束", container, UDim2.new(0.025, 0, startY + (buttonHeight + spacing)*2, 0), false)
    CreateButton("防甩", container, UDim2.new(0.025, 0, startY + (buttonHeight + spacing)*3, 0), true)
    CreateButton("视野", container, UDim2.new(0.025, 0, startY + (buttonHeight + spacing)*4, 0), true)

    -- 初始化状态显示
    UpdateButtonState("防甩", Teleport.AntiThrow)
    UpdateButtonState("视野", Teleport.WallVision)

    -- 整个UI可拖动
    local dragStartPos, containerStartPos
    container.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragStartPos = input.Position
            containerStartPos = Vector2.new(container.AbsolutePosition.X, container.AbsolutePosition.Y)
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch and dragStartPos then
            local delta = input.Position - dragStartPos
            container.Position = UDim2.new(0, containerStartPos.X + delta.X, 0, containerStartPos.Y + delta.Y)
        end
    end)

    UIS.InputEnded:Connect(function()
        dragStartPos = nil
    end)

    print("优化UI已加载 - 整体界面缩小")
end

-- 视野穿墙模式
function ToggleWallVision()
    Teleport.WallVision = not Teleport.WallVision
    UpdateButtonState("视野", Teleport.WallVision)

    if Teleport.WallVision then
        -- 启用视野穿墙
        Teleport.OriginalTransparency = {}

        -- 使所有墙壁透明
        for _, part in ipairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Transparency < 0.5 then
                Teleport.OriginalTransparency[part] = part.Transparency
                part.Transparency = 0.7
            end
        end

        -- 使地面透明
        for _, terrain in ipairs(workspace:GetChildren()) do
            if terrain:IsA("Terrain") then
                Teleport.OriginalTransparency[terrain] = terrain.Transparency
                terrain.Transparency = 0.6
            end
        end

        print("视野穿墙模式已启用")
    else
        -- 禁用视野穿墙
        for part, transparency in pairs(Teleport.OriginalTransparency) do
            if part:IsA("BasePart") or part:IsA("Terrain") then
                part.Transparency = transparency
            end
        end
        Teleport.OriginalTransparency = {}
        print("视野穿墙模式已禁用")
    end
end

-- 获取所有玩家列表
local function GetAllPlayers()
    local players = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(players, player)
        end
    end
    return players
end

-- 寻找最近玩家
local function FindNearestPlayer()
    local nearest, minDist = nil, math.huge
    local myChar = Players.LocalPlayer.Character
    if not myChar then return end

    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    if not myRoot then return end

    for _, player in ipairs(Teleport.PlayerList) do
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local dist = (myRoot.Position - char.HumanoidRootPart.Position).Magnitude
            if dist < minDist then
                minDist = dist
                nearest = player
            end
        end
    end
    return nearest
end

-- 设置零重力
local function SetZeroGravity(character)
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- 移除现有BodyForce
    if Teleport.BodyForce then
        Teleport.BodyForce:Destroy()
        Teleport.BodyForce = nil
    end
    
    -- 创建新的BodyForce抵消重力
    Teleport.BodyForce = Instance.new("BodyForce")
    Teleport.BodyForce.Name = "AntiGravity"
    Teleport.BodyForce.Force = Vector3.new(0, workspace.Gravity * humanoidRootPart:GetMass(), 0)
    Teleport.BodyForce.Parent = humanoidRootPart
end

-- 移除零重力
local function RemoveZeroGravity()
    if Teleport.BodyForce then
        Teleport.BodyForce:Destroy()
        Teleport.BodyForce = nil
    end
end

-- 检测异常移动（防甩核心）
local function CheckAbnormalMovement(currentPos)
    if not Teleport.LastPosition then
        Teleport.LastPosition = currentPos
        return false
    end
    
    local distance = (currentPos - Teleport.LastPosition).Magnitude
    Teleport.LastPosition = currentPos
    
    -- 如果移动距离超过预期值，视为异常移动
    return distance > 10 -- 可根据需要调整阈值
end

-- 传送逻辑 - 增强防甩和重力控制
local function TeleportRoutine()
    if not Teleport.Active then return end

    local myChar = Players.LocalPlayer.Character
    local targetChar = Teleport.Target and Teleport.Target.Character

    if not myChar or not targetChar then
        StopTeleport()
        return
    end

    local myRoot = myChar:FindFirstChild("HumanoidRootPart")
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")

    if myRoot and targetRoot then
        -- 检测异常移动（防甩）
        if CheckAbnormalMovement(myRoot.Position) then
            print("检测到异常移动，重新传送到目标下方")
        end
        
        -- 设置零重力防止掉落
        SetZeroGravity(myChar)
        
        -- 正下方传送：5.5格高度
        local newPos = Vector3.new(
            targetRoot.Position.X,
            targetRoot.Position.Y - 5.5, -- 正下方5.5格
            targetRoot.Position.Z
        )

        -- 设置位置并面向目标
        myRoot.CFrame = CFrame.new(newPos, targetRoot.Position)
    end
end

-- 增强防甩模式 - 循环传送确保始终在目标下方
function ToggleAntiThrow()
    Teleport.AntiThrow = not Teleport.AntiThrow
    UpdateButtonState("防甩", Teleport.AntiThrow)

    if Teleport.AntiThrow then
        print("增强防甩模式已启用 - 循环传送确保位置")
    else
        print("防甩模式已禁用")
    end
end

-- 按钮功能
function StartTeleport()
    if Teleport.Active then return end

    Teleport.Origin = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    Teleport.PlayerList = GetAllPlayers()
    Teleport.Target = FindNearestPlayer()

    if not Teleport.Target then
        warn("未找到目标玩家")
        return
    end

    Teleport.Active = true
    Teleport.Connection = RunService.Heartbeat:Connect(function()
        TeleportRoutine()
        task.wait(0.001) -- 0.001秒间隔
    end)
    
    print("传送开始 - 目标: "..Teleport.Target.Name)
end

-- 换人功能
function SwapTarget()
    if not Teleport.Active then return end

    Teleport.PlayerList = GetAllPlayers()

    if #Teleport.PlayerList == 0 then
        warn("没有其他玩家可切换")
        return
    end

    local currentIndex = 1
    for i, player in ipairs(Teleport.PlayerList) do
        if player == Teleport.Target then
            currentIndex = i
            break
        end
    end

    local nextIndex = currentIndex % #Teleport.PlayerList + 1
    Teleport.Target = Teleport.PlayerList[nextIndex]

    print("已切换到: "..Teleport.Target.Name)
end

-- 结束功能
function StopTeleport()
    if not Teleport.Active then return end

    Teleport.Active = false
    if Teleport.Connection then
        Teleport.Connection:Disconnect()
    end
    
    -- 移除零重力
    RemoveZeroGravity()
    
    Teleport.LastPosition = nil

    print("传送已停止，重力已恢复")
end

-- 玩家加入/离开事件
Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        table.insert(Teleport.PlayerList, player)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    for i, p in ipairs(Teleport.PlayerList) do
        if p == player then
            table.remove(Teleport.PlayerList, i)
            break
        end
    end
end)

-- 异常处理
Players.LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(function()
        if Teleport.Active then
            StopTeleport()
        end
    end)
    
    -- 角色重生时重新应用零重力
    if Teleport.Active then
        wait(1) -- 等待角色完全加载
        SetZeroGravity(char)
    end
end)

-- 执行
InitMobileUI()
print("传送脚本加载完成 | 方向:正下方(Y-5.5) | 间隔:0.001秒 | 增强防甩:循环传送+零重力 | 透视功能已修复 | UI整体缩小")